# -*- coding: utf-8 -*-
"""Tugas8_PemodelanSimulasi.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZOJtSEcsWlOHuJ7GVPsuqTSfxNkW1WeD
"""

# 1. Parameter
a = 5    # Konstanta pengali
m = 8    # Modulus
Z0 = 42  # Seed (bilangan awal)

"""Parameter ini menentukan perilaku generator bilangan acak:

𝑎: Konstanta pengali menentukan skala perhitungan.

𝑚: Modulus memastikan hasil tetap dalam batas tertentu (0 hingga 𝑚 − 1).

Z0: Nilai awal yang digunakan untuk memulai penghitungan.
"""

# 2. Inisialisasi Daftar
results = []    # List untuk menyimpan hasil
teams = ["Tim A", "Tim B", "Tim C", "Tim D", "Tim E", "Tim F", "Tim G", "Tim H"]
brackets = []   # List untuk menyimpan hasil bracket

"""Baris ini mendeklarasikan sebuah list kosong bernama results.
List ini nantinya akan digunakan untuk menyimpan semua data hasil perhitungan dari algoritma random number generator (RNG) di setiap iterasi.
"""

# 3. Algoritma RNG dan Pengacakan Tournament
Z = Z0    # Bilangan awal
available_teams = teams.copy()  # Daftar tim yang belum dipilih

while len(available_teams) > 0:
    # Generate bilangan acak
    Z_prev = Z    # Menyimpan bilangan sebelumnya
    Z = (a * Z) % m    # Menghitung bilangan acak selanjutnya
    U = Z / m    # Menghitung bilangan acak seragam
    rumus = f"(5 * {Z_prev}) mod {m}"    # Rumus yang digunakan

    # Pilih tim berdasarkan bilangan acak
    index = int(U * len(available_teams))
    selected_team = available_teams.pop(index)

    # Simpan hasil perhitungan RNG
    results.append([len(teams) - len(available_teams), Z_prev, rumus, Z, round(U, 3), selected_team])

    # Buat bracket setiap 2 tim terpilih
    if len(results) % 2 == 0:
        match = (results[-2][5], results[-1][5])
        brackets.append(match)

"""- Menggunakan rumus LCG: Zi = (a × Zi-1) mod m

- Setiap bilangan acak digunakan untuk memilih tim

- Tim yang sudah terpilih dihapus dari daftar available_teams

- Setiap 2 tim terpilih, dibuat pasangan pertandingan


"""

# 4. Output Hasil RNG
print("=== Proses Pengacakan dengan RNG ===")
print(f"{'i':<3} | {'Zi-1':<5} | {'Rumus Zi = (5.Zi-1) mod 8':<25} | {'Zi':<5} | {'Ui':<6} | {'Tim Terpilih':<10}")
print("-" * 70)
for row in results:
    print(f"{row[0]:<3} | {row[1]:<5} | {row[2]:<25} | {row[3]:<5} | {row[4]:<6} | {row[5]:<10}")

# 5. Output Hasil Bracket
print("\n=== Hasil Bracket Tournament ===")
for i, match in enumerate(brackets, 1):
    print(f"Pertandingan {i}: {match[0]} vs {match[1]}")